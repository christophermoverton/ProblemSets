import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    // recursive implementation
    public int gcd(int p, int q) {
        if (q == 0) return p;
        else return gcd(q, p % q);
    }

    public ArrayList<Integer[]> gcd2(int p, int q){
      ArrayList<Integer[]> cset = new ArrayList<Integer[]>();
      //int gval = gcd(p,q);
      int p1 = p;
      int q1 = q;
      while (q1 != 0){
        int[] a = {p1,p1/q1,q1,p1%q1};
        cset.add(a);
        int q2 = q1;
        q1 = p1 % q1;
        p1 = q2;
        
       }
       return cset;
    }
    
    public int[] revgcd(ArrayList<Integer[]> cset){
    	Collections.reverse(cset);
    	c = 0;
    	Integer[] coeff = cset.get(1);
    	//print(coeff)
    	Integer[] solu = {1, coeff[0],-1*coeff[1],coeff[2]};
    	for (Integer[] coeff : cset){
           if (c == 0){
              c+=1;
              continue;
           }
           if (c == 1){
              c+=1;
              continue;
           }
           Integer[] a = {1, coeff[0],-1*coeff[1],coeff[2], coeff[3]};
           if (a[4] == solu[1]){
              solu = new Integer[] {a[0]*solu[0], a[1], a[2]*solu[0],
                      a[3], solu[2],solu[3]};
           }
           else if (a[4] == solu[3]){
              solu = new Integer {a[0]*solu[2], a[1], a[2]*solu[2],
                                  a[3], solu[0],solu[1]};
           }
           if (solu.length == 6){
            if (solu[1] == solu[3]){
                solu = [solu[0] + solu[2], solu[1], solu[2],solu[3]];
            }
            else if (solu[1] == solu[5]){
                solu = [solu[0] + solu[4], solu[1], solu[2],solu[3]];
            }
            else if (solu[3] == solu[5]){
                solu = [solu[0],solu[1], solu[2] + solu[4], solu[3]];
            }
           }
           c += 1;
        }
    	return solu;
    }


    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Solution solution = new Solution();
        Scanner sc = new Scanner(System.in);
        int numQ = sc.nextInt();
        int[] row = new int[4];
        int c = 0;
        while(sc.hasNextInt()){
            if( c%4 == 3){
                int a = row[0];
                int b = row[1];
                int x = row[2];
                int y = sc.nextInt();
                if (y < x){
                    int b1 = b;
                    b = a;
                    a = b1;
                    int y1 = y;
                    y = x;
                    x = y1;
                }
                boolean checkX = false;
                boolean checkY = false;
                int gcd1 = solution.gcd(a, b);
                if (x % gcd1 == 0){
                   checkX = true;
                }
                if (y % gcd1 == 0){
                   checkY = true;
                }
                
                if (checkX && checkY){
                    System.out.println("YES");
                }
                else{
                    System.out.println(checkX);
                    System.out.println(checkY);
                    System.out.println("NO");
                }
                row = new int[4];
            }
            else{
                row[c%4] = sc.nextInt();
            }
            c+=1;
        }
    }
}
